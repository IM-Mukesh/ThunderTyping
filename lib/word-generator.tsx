// generateWords(count: number, seed?: number): string[]
// A cleaned deduplicated common words list with seeded random generation

export const COMMON_WORDS = Array.from(
  new Set([
    "the",
    "be",
    "to",
    "of",
    "and",
    "a",
    "in",
    "that",
    "have",
    "it",
    "for",
    "not",
    "on",
    "with",
    "he",
    "as",
    "you",
    "do",
    "at",
    "this",
    "but",
    "his",
    "by",
    "from",
    "they",
    "we",
    "say",
    "her",
    "she",
    "or",
    "an",
    "will",
    "my",
    "one",
    "all",
    "would",
    "there",
    "their",
    "what",
    "so",
    "up",
    "out",
    "if",
    "about",
    "who",
    "get",
    "which",
    "go",
    "me",
    "when",
    "make",
    "can",
    "like",
    "time",
    "no",
    "just",
    "him",
    "know",
    "take",
    "people",
    "into",
    "year",
    "your",
    "good",
    "some",
    "could",
    "them",
    "see",
    "other",
    "than",
    "then",
    "now",
    "look",
    "only",
    "come",
    "its",
    "over",
    "think",
    "also",
    "back",
    "after",
    "use",
    "two",
    "how",
    "our",
    "work",
    "first",
    "well",
    "way",
    "even",
    "new",
    "want",
    "because",
    "any",
    "these",
    "give",
    "day",
    "most",
    "us",
    "is",
    "was",
    "are",
    "been",
    "has",
    "had",
    "were",
    "said",
    "each",
    "many",
    "more",
    "very",
    "where",
    "much",
    "made",
    "such",
    "through",
    "before",
    "right",
    "still",
    "own",
    "same",
    "last",
    "both",
    "between",
    "long",
    "always",
    "call",
    "small",
    "turn",
    "ask",
    "need",
    "feel",
    "become",
    "leave",
    "put",
    "mean",
    "keep",
    "let",
    "begin",
    "seem",
    "help",
    "talk",
    "might",
    "show",
    "hear",
    "play",
    "run",
    "move",
    "live",
    "believe",
    "hold",
    "bring",
    "happen",
    "write",
    "provide",
    "sit",
    "stand",
    "lose",
    "pay",
    "meet",
    "include",
    "continue",
    "set",
    "learn",
    "change",
    "lead",
    "understand",
    "watch",
    "follow",
    "stop",
    "create",
    "speak",
    "read",
    "allow",
    "add",
    "spend",
    "grow",
    "open",
    "walk",
    "win",
    "offer",
    "remember",
    "love",
    "consider",
    "appear",
    "buy",
    "wait",
    "serve",
    "die",
    "send",
    "expect",
    "build",
    "stay",
    "fall",
    "cut",
    "reach",
    "kill",
    "remain",
    "suggest",
    "raise",
    "pass",
    "sell",
    "require",
    "report",
    "decide",
    "pull",
    "return",
    "explain",
    "hope",
    "develop",
    "carry",
    "break",
    "receive",
    "agree",
    "support",
    "hit",
    "produce",
    "eat",
    "cover",
    "catch",
    "draw",
    "choose",
    "treat",
    "cause",
    "point",
    "listen",
    "real",
    "basic",
    "second",
    "level",
    "early",
    "young",
    "important",
    "different",
    "large",
    "available",
    "popular",
    "strong",
    "possible",
    "likely",
    "common",
    "recent",
    "clear",
    "full",
    "certain",
    "realize",
    "easy",
    "short",
    "form",
    "system",
    "part",
    "group",
    "number",
    "world",
    "school",
    "family",
    "program",
    "fact",
    "hand",
    "place",
    "case",
    "week",
    "company",
    "where",
    "system",
    "each",
    "right",
    "program",
    "hear",
    "question",
    "during",
    "work",
    "play",
    "government",
    "run",
    "small",
    "number",
    "off",
    "always",
    "move",
    "night",
    "live",
    "point",
    "today",
    "bring",
    "happen",
    "next",
    "without",
    "before",
    "large",
    "must",
    "big",
    "thought",
    "line",
    "turn",
    "cause",
    "mean",
    "boys",
    "came",
    "old",
    "consider",
    "here",
    "why",
    "stop",
    "computer",
    "head",
    "example",
    "book",
    "study",
    "while",
    "business",
    "those",
    "music",
    "color",
    "personal",
    "machine",
    "strong",
    "special",
    "mind",
    "love",
    "left",
    "put",
    "end",
    "why",
    "turned",
    "start",
    "lot",
  ])
);

// Simple seeded random number generator (LCG)
class SeededRandom {
  private seed: number;

  constructor(seed: number = Date.now()) {
    this.seed = seed % 2147483647;
    if (this.seed <= 0) this.seed += 2147483646;
  }

  next(): number {
    this.seed = (this.seed * 16807) % 2147483647;
    return (this.seed - 1) / 2147483646;
  }
}

// Global seeded random instance for consistent generation
let globalRandom: SeededRandom | null = null;

export function initializeWordGenerator(seed?: number) {
  globalRandom = new SeededRandom(seed);
}

export function generateWords(count: number, useSeed = false): string[] {
  const words: string[] = [];
  const n = COMMON_WORDS.length;

  if (n === 0) return words;

  // Use seeded random for consistent generation, or Math.random for variety
  const getRandom = () => {
    if (useSeed && globalRandom) {
      return globalRandom.next();
    }
    return Math.random();
  };

  for (let i = 0; i < count; i++) {
    const idx = Math.floor(getRandom() * n);
    words.push(COMMON_WORDS[idx]);
  }

  return words;
}

// Initialize with a fixed seed for consistent behavior during development
if (typeof window !== "undefined") {
  initializeWordGenerator(12345);
}
